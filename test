카메라 연결해서 test 해볼것


///////////////////////////////////// 아두이노
#include <ESP8266WiFi.h>

//http://arduino.esp8266.com/stable/package_esp8266com_index.json

int ledPin = 13; // LED 핀 설정

void setup() {
  pinMode(ledPin, OUTPUT); // LED 핀을 출력으로 설정

  // 시리얼 통신 설정
  Serial.begin(9600);
}

void loop() {
  // 시리얼 입력이 있을 경우
  if (Serial.available() > 0) {
    // 시리얼 데이터 읽기
    char data = Serial.read();

    // LED ON/OFF 제어
    if (data == '1') {
      digitalWrite(ledPin, HIGH); // LED ON
      Serial.println("LED ON");
    } else if (data == '0') {
      digitalWrite(ledPin, LOW); // LED OFF
      Serial.println("LED OFF");
    }
  }
}

/////////////////////////////////////// python

import cv2
import serial

# 아두이노와 연결된 시리얼 포트 객체 생성
ser = serial.Serial('COM3', 9600)

# 카메라 캡처 객체 생성
cap = cv2.VideoCapture(0)

while True:
    # 이미지 캡처
    ret, img = cap.read()

    # HSV 이미지로 변환
    hsv = cv2.cvtColor(img, cv2.COLOR_BGR2HSV)

    # 파란색 범위 지정
    lower_blue = (110, 50, 50)
    upper_blue = (130, 255, 255)

    # 파란색 범위에 해당하는 이미지 추출
    mask = cv2.inRange(hsv, lower_blue, upper_blue)

    # 추출한 이미지에서 윤곽선 검출
    contours, hierarchy = cv2.findContours(mask, cv2.RETR_EXTERNAL, cv2.CHAIN_APPROX_SIMPLE)

    # 윤곽선이 존재할 경우
    if len(contours) > 0:
        # 가장 큰 윤곽선 선택
        max_contour = max(contours, key=cv2.contourArea)

        # 윤곽선을 둘러싼 최소한의 사각형 추출
        rect = cv2.minAreaRect(max_contour)
        box = cv2.boxPoints(rect)
        box = np.int0(box)

        # 윤곽선 그리기
        cv2.drawContours(img, [box], 0, (0, 0, 255), 2)

        # 아두이노로 LED ON 신호 전송
        ser.write(b'1')
    else:
        # 아두이노로 LED OFF 신호 전송
        ser.write(b'0')

    # 이미지 출력
    cv2.imshow('img', img)

    # ESC 키로 종료
    if cv2.waitKey(1) == 27:
        break

# 객체 해제
cap.release()
cv2.destroyAllWindows()

